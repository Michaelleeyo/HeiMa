数组：是一种容器，可以同时存放多个数据值
特点：
1.数组是一种引用数据类型
2.数组当中的多个数据，类型必须统一
3.数组的长度在程序运行期间不可以改变

数组的初始化：在内存中创建一个数组，并且向其中赋予一些默认值。
两种常见的初始化方式：
1.动态初始化（指定长度）int[] str1 = new int[5];
2.静态初始化（指定内容）int[] str2 = new int[]{1,2,3,4,5};
动态初始化数组的格式：
数据类型[]数组名称 = new 数据类型[数组长度];

静态初始化基本格式：
数据类型[]数组名称 = new 数据类型[]{元素1，元素2，...}
注意事项：
虽然静态初始化没有直接告诉长度，但是大括号里面的元素具体内容，也可以自动推算长度

省略格式：
数组类型[]数组名称={元素1，元素2，...}; int[] str3 = {1,2,3,4,5};
注意事项：
1.虽然静态初始化没有直接告诉长度，但是大括号里面的元素具体内容，也可以自动推算长度
2.静态初始化标准格式可以拆分为两个步骤。
3.动态初始化也可以拆为两个步骤。
4.静态初始化一旦使用省略格式就不能拆分。
使用建议：
如果不确定数组当中的内容使用动态初始化，如果确定了具体内容，用静态初始化

访问数组元素的格式：数组名称[索引值]
索引值：就是一个int数字，代表数组当中元素的编号。
【注意】索引值从0开始，一直到“数组长度-1”为止

使用动态初始化时，其中元素会自动拥有一个默认值。规则如下：
如果是整数，默认0；
浮点类型，0.0
字符类型，'\u0000'
布尔类型，false
引用类型，null
注意事项：
静态初始化其实也有默认值过程，只不过系统马上自动把默认值替换为了大括号当中的具体数值。

数组一旦创建，程序运行期间，长度不可改变

数组可以作为方法的参数
当调用方法的时候，向方法的小括号进行传参，传递进去的其实是数组的地址值
=========================================================================================
常见异常：
如果访问数组元素时异常，索引编号并不存在，那么将会发生数组索引越界异常
ArrayIndexOutOfBoundsException
原因：索引编号写错
解决方法：修改为正确编号

所有的引用变量，都可以赋值为NULL值，但是表示其中什么都没有
数组必须进行new初始化才能使用其中的元素
如果只是赋值一个Null，没有new创建，将会发生空指针异常：
NullPointerException
原因：忘了new
解决：补上New

