在父子类的继承关系当中，如果成员变量重名，则创建子类对象时，访问有两种方式：
1.直接通过子类对象访问成员变量：
  等号左边是谁，就优先使用谁，没有则向上找
2.间接通过成员方法访问成员变量：
  方法属于谁，就优先用谁，没有就向上找
  
在父子类的继承关系中，创建子类对象，访问成员方法规则：
创建的对象是谁，就优先用谁，没有则向上找

注意事项：
无论成员方法还是成员变量，如果没有都是向上找父类，不会向下找子类

重写（override)
概念：在继承关系中，方法的名称一样，参数列表也一样。
重写（override）：方法名称一样，参数列表也一样。覆盖，重写。
重载（overload）：方法名称一样，参数列表不一样。

方法覆盖重写的注意事项：
1.必须保证父子类之间方法的名称相同，参数列表也相同。
@Override:写在方法前面，用来检测是不是有效的正确覆盖重写。
这个注解就算不写，只要满足要求，也是正确的方法覆盖重写。
2.子类方法的返回值必须【小于等于】父类方法的返回值范围。
java.lang.Object类时所有类的公共最高父类（祖宗类）
java.lang.String就是Object的子类
3.子类方法的权限必须【大于等于】父类方法的权限修饰字符。
拓展：public > protected > (default) > private
备注：(default)不是关键字default，而是什么都不写，留空

继承关系中，父子类构造方法的访问特点
1.子类构造方法当中有一个默认隐含"super()"调用，所以一定要先调用父类构造方法，再执行子类构造方法
2.子类构造可以用super来调用父类重载构造
3.super的父类构造调用，必须是子类构造方法的第一个语句。不能一个子类构造调用多次super构造
4.子类必须调用父类构造方法，不写则赠送super(),写了则用写的指定super调用，super只能有一个，还必须是第一个

super关键字的使用方法三种：
1.在子类的成员方法中，访问父类的成员变量
2.在子类的成员方法中，访问父类的成员方法
3.在子类的的构造方法中，访问父类的构造方法

super关键字用来访问父类内容，而this关键字用来访问本类内容。用法三种：
1.本类的成员方法中，访问本类的成员变量
2.在本类的成员方法中，访问呢本类的另一个成员方法
3.在本类的构造方法中，访问本类的另一个构造方法
在第三中用法中要注意：
1.this(...)调用必须时构造方法的第一个语句，唯一语句
2.super和this两种构造调用，不能同时使用